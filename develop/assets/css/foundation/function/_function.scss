//
// #Function
//

// @desc - 渡した引数から単位を取り除きます。
// @example scss - Usage
// .foo {
//  font-size: strip-unit(24em);
// }
// @example css - CSS Output
// .foo {
//   font-size: 24;
// }
@function strip-unit($n) {
  @return $n / ($n * 0 + 1);
}

// @desc - '$z-index'のkeyから値を返します。
// @see - '$z-index' (foundation/variable/_global.scss)
// @author - Hugo Giraudel
// @link http://www.sitepoint.com/better-solution-managing-z-index-sass/
// @example scss - Usage
// .foo {
//   z-index: z-index(default);
// }
// @example css - CSS Output
// .foo {
//   z-index: 1;
// }
@function z-index($layer) {
  @if not map-has-key($z-index, $layer) {
    @error 'There is no layer named `#{$layer}` in $z-index. '
         + 'Layer should be one of #{map-keys($z-index)}.';
  }
  @return map-get($z-index, $layer);
}

// @desc - 白色を加えて明度を明るくします。
// @example scss - Usage
// .foo {
//   color: tint(blue, 50%);
// }
// @example css - CSS Output
// .foo {
//   color: #8080ff;
// }
@function tint($color, $percent) {
  @return mix(#fff, $color, $percent);
}

// @desc - 黒色を加えて明度を暗くします。
// @example scss - Usage
// .foo {
//   color: shade(blue, 50%);
// }
// @example css - CSS Output
// .foo {
//   color: navy;
// }
@function shade($color, $percent) {
  @return mix(#000, $color, $percent);
}

// @desc - Photoshopのトラッキングの値を`em`に変換します。
// @example scss - Usage
// .foo {
//   letter-spacing: tracking(50);
// }
// @example css - CSS Output
// .foo {
//   letter-spacing: 0.05em;
// }
@function tracking($value) {
  @return ($value / 1000) * 1em;
}
